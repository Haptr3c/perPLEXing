version: "3.8"
services:
  vpn:
    container_name: vpn
    hostname: vpn
    image: dperson/openvpn-client:latest
    cap_add:
      - net_admin # required to modify network interfaces
    restart: unless-stopped
    volumes:
      - /dev/net:/dev/net:z # tun device
      - ${ROOT}/config/vpn:/vpn # OpenVPN configuration
    security_opt:
      - label:disable
    ports:
      - 8112:8112 # port for deluge web UI to be reachable from local network
    command: '-f "" -r 192.168.1.0/24' # enable firewall and route local network traffic

  deluge:
    container_name: deluge
    image: linuxserver/deluge:latest
    restart: unless-stopped
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${ROOT}/downloads:/downloads # downloads folder
      - ${ROOT}/config/deluge:/config # config files

  jackett:
    container_name: jackett
    hostname: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download
      - ${ROOT}/config/jackett:/config # config files

  nzbget:
    container_name: nzbget
    hostname: nzbget
    image: linuxserver/nzbget:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${ROOT}/downloads:/downloads # download folder
      - ${ROOT}/config/nzbget:/config # config files

  sonarr:
    container_name: sonarr
    hostname: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/sonarr:/config # config files
      - ${MEDIA}/tv:/tv # tv shows folder
      - ${ROOT}/downloads:/downloads # download folder
 
  radarr:
    container_name: radarr
    hostname: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/radarr:/config # config files
      - ${MEDIA}/movies:/movies # movies folder
      - ${ROOT}/downloads:/downloads # download folder

  plex:
    deploy:
      resources:
        reservations:
          devices:
            - capabilities:
              - gpu
    runtime: nvidia
    privileged: true
    container_name: plex
    hostname: plex
    image: linuxserver/plex:latest
    restart: unless-stopped
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      # - CUDA_DRIVER_CAPABILITIES=compute,video,utility
      - VERSION=docker
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=America/New_York
      - PLEX_CLAIM=claim-xhy2yMvjkSXMz8q72TsL
    network_mode: host
    volumes:
      - ${ROOT}/plexdb:/config
      - ${ROOT}/transcode:/transcode
      - ${MEDIA}:/data
      - ${ROOT}/tmp:/tmp
    # devices:
      # - /dev/dri:/dev/dri
      # - /dev/nvidia0:/dev/nvidia0
      # - /dev/nvidiactl:/dev/nvidiactl
      # - /dev/nvidia-uvm:/dev/nvidia-uvm
      # - /dev/nvidia-modeset:/dev/nvidia-modeset
      # - /dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools

  bazarr:
    container_name: bazarr
    hostname: bazarr
    image: linuxserver/bazarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=022 #optional
    volumes:
      - ${ROOT}/config/bazarr:/config # config files
      - ${MEDIA}/movies:/movies # movies folder
      - ${MEDIA}/tv:/tv # tv shows folder
    ports:
      - 6767:6767

  organizr:
    container_name: organizr
    hostname: organizr
    image: organizr/organizr:latest
    restart: unless-stopped
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=${TZ}
    volumes:
      - ${ROOT}/config/organizr:/config
    ports:
      - 80:80

  homeassistant:
    image: linuxserver/homeassistant:latest
    container_name: homeassistant
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ${ROOT}/config/homeassistant:/config
    ports:
      - 8123:8123 #optional
    # devices:
      # - /path/to/device:/path/to/device #optional
    restart: unless-stopped
